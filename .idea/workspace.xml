<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="cd6c2533-1a59-4d72-b0c1-4c6c60be1f1f" name="Default Changelist" comment="Text to MP3 Code">
      <change afterPath="$PROJECT_DIR$/convertStringToMp3.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FavoritesManager">
    <favorites_list name="GoLang" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
        <option value="Go Application" />
      </list>
    </option>
  </component>
  <component name="GOROOT" path="/usr/local/go" />
  <component name="Git.Settings">
    <option name="PREVIOUS_COMMIT_AUTHORS">
      <list>
        <option value="Greg Westmoreland" />
        <option value="geotrain &lt;gregwestmoreland@startmail.com&gt;" />
        <option value="ge" />
      </list>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1W20ChxfGsbzLOGKDvpMbV5B344" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="DefaultGoTemplateProperty" value="Go Application" />
    <property name="GO_FMT" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable.Global.GOPATH.is.expanded" value="true" />
    <property name="configurable.Module.GOPATH.is.expanded" value="true" />
    <property name="configurable.Project.GOPATH.is.expanded" value="true" />
    <property name="go.gopath.indexing.explicitly.defined" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="last_opened_file_path" value="$USER_HOME$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="project.propDebugger" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Build.go build convertStringToMp3.go">
    <configuration name="go build GitHubHTTPServer.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="GoLang" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/GitHubHTTPServer.go" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build convertStringToMp3.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="GoLang" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/convertStringToMp3.go" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build databaseKeyValue.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="GoLang" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/databaseKeyValue.go" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build gitHubAPI.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="GoLang" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/gitHubAPI.go" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build httpCalls.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="GoLang" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/httpCalls.go" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build convertStringToMp3.go" />
        <item itemvalue="Go Build.go build databaseKeyValue.go" />
        <item itemvalue="Go Build.go build GitHubHTTPServer.go" />
        <item itemvalue="Go Build.go build gitHubAPI.go" />
        <item itemvalue="Go Build.go build httpCalls.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="UpdateCopyrightCheckinHandler">
    <option name="UPDATE_COPYRIGHT" value="true" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Fix logic order to check if number is divisible by 3 and 5 with &amp;&amp; in the if statement first before checking if only divisible by 3 or 5 individually so it will print both words &quot;fizz buzz&quot; for number 15" />
    <MESSAGE value="Strings.go example" />
    <MESSAGE value="evenEndedNumbers challenge" />
    <MESSAGE value="Slices example using Looney Tunes Characters" />
    <MESSAGE value="Find maximum value in array challenge" />
    <MESSAGE value="maps 2nd example" />
    <MESSAGE value="maps challenge" />
    <MESSAGE value="Functions Example 2" />
    <MESSAGE value="parameter passing" />
    <MESSAGE value="Error return example" />
    <MESSAGE value="defer function example" />
    <MESSAGE value="struct example" />
    <MESSAGE value="methods example" />
    <MESSAGE value="New Structs With Functions Example" />
    <MESSAGE value="interfaces example" />
    <MESSAGE value="package errors example" />
    <MESSAGE value="correct spelling" />
    <MESSAGE value="panic_and_recover example" />
    <MESSAGE value="channels example" />
    <MESSAGE value="select statement using channels and timeout value for this go routine" />
    <MESSAGE value="json example" />
    <MESSAGE value="http call GET / POST example using json" />
    <MESSAGE value="github API call" />
    <MESSAGE value="httpd example" />
    <MESSAGE value="Text to MP3 Code" />
    <option name="LAST_COMMIT_MESSAGE" value="Text to MP3 Code" />
  </component>
</project>